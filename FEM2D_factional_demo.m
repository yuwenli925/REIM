%% Solving fractional Laplace equation on uniform and graded meshes

% s = 0.5;
% res = [0.001163181622200 0.013218620357233 0.000255953763580 0.046695455564245 0.002833475749545 0.000144842262876 7.333904150551077 0.000535823283956 0.176401964217136 0.000085661432787 0.026987066006317 0.005823374267035 0.418860226358461 0.000717641159456 0.001870543346405 0.063983537529953 0.000318817071900 0.000126652196126 -0.002953457313354 0.494928246538564];
% pol = [0.000018062500000 0.000933302500000 0.000000562500000 0.013156090000000 0.000104040000000 0.000000062500000 25.000000000000000 0.000003422500000 0.136641122500000 0.000000002500000 0.003271840000000 0.000277222500000 0.684011702500000 0.000008122500000 0.000044222500000 0.039243610000000 0.000001440000000 0.000000202500000 0.001759802500000 2.185962250000000];

s = 0.25;
res = [-1.96298031864952e-06 -1.11535549951834e-05 4.27233196628784e-05 9.59689049772336e-06 0.000213889633249589 -5.22320569583831e-05 0.000668806790719603 5.76525405016050e-05 -5.85668066688789e-06 -0.00313932347113078 0.0267880544502300 0.000509833094412510 0.0380551827149431 1.49398838871184e-05 -7.81343828127422e-05 0.0360352287990265 0.00607666232920157 -8.46731319082708e-05 0.0547022314242818 0.0990108873698539 1.64016100573218e-05 -0.00167143669091490 0.331571459369700 -0.000540353228870561 -0.0233529304566401 5.49270226714758e-06 0.817120090571015 -4.03574590095950e-05 -0.0521722095033257 -0.0144756384576852 -1.56010672249920 -0.000405157292078351 -0.153718276851904 -0.0567216603972400 -1.65681901813079e-05 0.00319348173919014 -0.483716675343831 9.86441493763723e-05 -0.0400511953812559 6.25417517267870];
pol = [1.00000000000000e-10 2.20887981226306e-08 1.59441473994887e-07 5.27668514009785e-09 1.06663052198171e-06 6.16445870266023e-08 5.39965712292436e-06 4.07197311988284e-07 1.75235386545551e-09 2.01675120991751e-05 9.58276295635973e-05 2.16854322896280e-06 0.000557664741007712 1.23323409409112e-08 1.01042073793774e-07 0.00271779758598533 4.04858863668828e-05 6.42545597022061e-07 0.000232639438878451 0.0124321795470765 3.66675709563398e-08 9.91969340067263e-06 0.0621436414782966 3.37881475615808e-06 0.00122333041046402 6.77509606841312e-10 0.310631950058280 2.54802157820863e-07 0.00573957109422183 6.22869691132868e-05 1.17499229168114 1.52086633082875e-06 0.0279719898308069 0.000353406177836102 8.43262876434101e-09 1.39660160327544e-05 0.136322418914274 7.94236743827963e-08 0.000147429465881960 3.86628306187004];

% s = 0.75;
% res = [0.00457883154641595 0.00146729216788722 0.00201807430770064 0.00160538779165539 0.00356933064367128 0.00190490680583148 0.00603111793084907 0.00254930804205743 0.00210655726145147 0.0100364188420009 0.0167417807679732 0.00406241097825122 0.0300086585703738 0.00145107746633369 0.00196081225873088 0.0441257717600253 0.0125726654389291 0.00308659417577671 0.0243787481339155 0.0725653696894427 0.00156141816804935 0.00791355954918577 0.130660054798773 0.00395086831472513 0.0309154711436968 0.000142589387749811 0.264828142924427 0.00244294384284428 0.0386918671316630 0.00307644900313786 0.127906050691824 0.00191314041032252 0.0522276244920224 -0.000747126962628738 0.000350938272837251 0.00104120668778442 0.0340997830917754 -0.000116390936730277 0.00179437114481018 0.957889369640691];
% pol = [1.00000000000000e-10 2.20887981226306e-08 1.59441473994887e-07 5.27668514009785e-09 1.06663052198171e-06 6.16445870266023e-08 5.39965712292436e-06 4.07197311988284e-07 1.75235386545551e-09 2.01675120991751e-05 9.58276295635973e-05 2.16854322896280e-06 0.000557664741007712 1.23323409409112e-08 1.01042073793774e-07 0.00271779758598533 4.04858863668828e-05 6.42545597022061e-07 0.000232639438878451 0.0124321795470765 3.66675709563398e-08 9.91969340067263e-06 0.0621436414782966 3.37881475615808e-06 0.00122333041046402 6.77509606841312e-10 0.310631950058280 2.54802157820863e-07 0.00573957109422183 6.22869691132868e-05 1.17499229168114 1.52086633082875e-06 0.0279719898308069 0.000353406177836102 8.43262876434101e-09 1.39660160327544e-05 0.136322418914274 7.94236743827963e-08 0.000147429465881960 3.86628306187004];

% xx = linspace(1e-8,1,5e7);
% eim = 0;
% for i=1:length(pol)
%     eim = eim + res(i)./(xx+pol(i));
% end
% fprintf('EIM error is %f\n', max(abs(eim - xx.^(-s))) );

% initial mesh
[node, elem] = squaremesh([-1, 1, -1, 1],0.25);
for iter=1:2
    [node, elem] = uniformrefine(node, elem);
end

graded_error = zeros(4,1);
uniform_error = zeros(4,1);
graded_N = zeros(4,1);
uniform_N = zeros(4,1);

%% Loop for computing the FEM solutions on uniform meshes
for i = 1:4
    uniform_N(i) = size(node,1);
    fprintf('The number of vertices in uniform mesh is %d\n', uniform_N(i));

    T = myauxstructure(elem);
    [D, area] = gradbasis(node,elem);
    [A, M] = P1mat2d(D,area,elem);
    b = P1rhs2d(node, elem, area, @f);

    bv = unique(T.bdEdge);

    fv = setdiff(1:uniform_N(i),bv)';

    Lambda = 1e8;
    AA = A(fv,fv);
    MM = M(fv,fv);
    rhs = b(fv)/Lambda^s;

    uh = zeros(uniform_N(i),1);
    x = zeros(length(fv),1);
    np = length(pol);
    for j=1:np
        x = x + res(j)*( ( AA/Lambda + pol(j)*MM ) \ rhs );
    end
    uh(fv) = x;
    e = uh - u(node,s,2000);
    uniform_error(i) = sqrt(e'*M*e);
    fprintf('The L2 norm error on uniform mesh is %e\n',uniform_error(i));
    [node,elem] = uniformrefine(node,elem);
end

%% set dynamic = 1 to visualize the graded mesh
maxit = 30; dynamic = 0;
if dynamic
    clf,
    set(gcf,'unit','centimeters','position',[15 15 20 20]); 
    showmesh(node,elem,'Facealpha',0.5);
end

%% Loop for computing the FEM solutions on graded meshes
[node, elem] = squaremesh([-1, 1, -1, 1],0.25);
for iter=1:2
    [node, elem] = uniformrefine(node, elem);
end

for Nmax = [1000, 4000, 16000, 64000]
    theta = 6;
    for iter=1:maxit
        NV = size(node,1);
        if NV<Nmax
            [~,area] = gradbasis(node,elem);
            mid = (node(elem(:,1),:)+node(elem(:,2),:)+node(elem(:,3),:))/3;
            dist = min(min(min(abs(mid(:,1)-1),abs(mid(:,1)+1)),abs(mid(:,2)-1)),abs(mid(:,2)+1));
            marker = ( area > (theta/NV*log10(NV)*dist) );
            [node, elem] = bisect(node, elem, marker);
        end
        if dynamic
            cla, showmesh(node,elem,'Facealpha',0.5);
            drawnow
        end
    end

    fprintf('The number of vertices in graded mesh is %d\n', NV);

    T = myauxstructure(elem);
    [D, area] = gradbasis(node,elem);
    [A, M] = P1mat2d(D,area,elem);
    b = P1rhs2d(node, elem, area, @f);

    bv = unique(T.bdEdge);
    NV(iter) = size(node,1);

    fv = setdiff(1:NV(iter),bv)';

    Lambda = 1e8;
    AA = A(fv,fv);
    MM = M(fv,fv);
    rhs = b(fv)/Lambda^s;

    uh = zeros(NV(iter),1);
    x = zeros(length(fv),1);
    np = length(pol);
    for j=1:np
        x = x + res(j)*( ( AA/Lambda + pol(j)*MM ) \ rhs );
    end
    uh(fv) = x;
    e = uh - u(node,s,2000);
    i = log2(Nmax/1000)/2 + 1;
    graded_error(i) = sqrt(e'*M*e);
    graded_N(i) = size(node,1);
    fprintf('The L2 norm error on graded mesh is %e\n',graded_error(i));
end

loglog(uniform_N,(uniform_N).^(-0.5),'-o',uniform_N,uniform_error,'-*',graded_N,(0.1*graded_N).^(-1),'-s',graded_N,graded_error,'-d');
legend('O(N^{-0.5})','uniform grids','O(N^{-1})','graded grids');
axis tight
%--------------------------------------------------------------------------
function z = u(p,s,m)
%z = sin(pi*(p(:,1)+1)/2).*sin(pi*(p(:,2)+1)/2);
z = zeros(size(p,1),1);
for i=1:2:m
    sinpix = sin(i*pi*0.5*(p(:,1)+1));
    for j=1:2:m
        z = z + (0.25*(i^2+j^2)*pi^2)^(-s)*16/i/j/pi^2*sinpix.*sin(j*pi*0.5*(p(:,2)+1));
    end
end
end

function z = f(p)
%z = (pi^2/2)^0.5*sin(pi*(p(:,1)+1)/2).*sin(pi*(p(:,2)+1)/2);
z = ones(size(p,1),1);
end

